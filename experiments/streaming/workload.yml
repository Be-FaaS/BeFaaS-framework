# Load workload for streaming use case
config:
  target: ' '
  phases:
    #Constant load for 3x5min (300s), 2 flows per second
    - duration: 300
      arrivalCount: 500
    - pause: 1200
    - duration: 300
      arrivalCount: 5000
  processor: '{{ $processEnvironment.PROCESSOR_DIR }}/logger.js'

  payload:
    -
      path: 'users.csv'
      fields:
        - 'username'
        - 'name'
        - 'password'
        - 'devicename1'
        - 'deviceid1'
        - 'devicename2'
        - 'deviceid2'
      loadAll: true
      name: users
      skipHeader: true
    -
      path: 'users.csv'
      fields:
        - 's_username'
        - 's_name'
        - 's_password'
        - 's_devicename1'
        - 's_deviceid1'
        - 's_devicename2'
        - 's_deviceid2'
      skipHeader: true

  variables:
    liked:
      - "True"
      - "False"

before:
    flow:
      - log: "Insert user data"
      - loop:
          - post:
              url: '{{ registerUser }}'
              json:
                username: '{{ $loopElement.username }}'
                password: '{{ $loopElement.password }}'
                name: '{{ $loopElement.name }}'
              beforeRequest: 'beforeRequest'
              afterResponse: 'afterResponse'
          - post:
              url: '{{ registerDevice }}'
              json:
                username: '{{ $loopElement.username }}'
                password: '{{ $loopElement.password }}'
                devicename: '{{ $loopElement.devicename1 }}'
                deviceid: '{{ $loopElement.deviceid1 }}'
              beforeRequest: 'beforeRequest'
              afterResponse: 'afterResponse'
          - post:
              url: '{{ registerDevice }}'
              json:
                username: '{{ $loopElement.username }}'
                password: '{{ $loopElement.password }}'
                devicename: '{{ $loopElement.devicename2 }}'
                deviceid: '{{ $loopElement.deviceid2 }}'
              beforeRequest: 'beforeRequest'
              afterResponse: 'afterResponse'
        over: users

scenarios:
  - flow:
      - post:
          url: '{{ addVideo }}'
          json:
            title: '{{ $randomString() }}'
            author: '{{ $randomString() }}'
            duration: '{{$randomNumber(5400,7200)}}'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "Video added."
    name: 'addVideo'
    weight: 1
  - flow:
      - log: "will auth device at {{ authDevice }} with {{ s_username }}, {{ s_password}}, and {{ s_deviceid1 }}"
      - post:
          url: '{{ authDevice }}'
          json:
            username: '{{ s_username }}'
            password: '{{ s_password }}'
            deviceid: '{{ s_deviceid1 }}'
          capture:
            json: '$.authtoken'
            as: 'token'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "will get videos with token {{ token }}"
      - post:
          url: '{{ getVideos }}'
          json:
            username: '{{ s_username }}'
            deviceid: '{{ s_deviceid1 }}'
            authtoken: '{{ token }}'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "Found some videos"
    name: 'listVideos'
    weight: 1
  - flow:
      - log: "will auth device at {{ authDevice }} with {{ s_username }}, {{ s_password}}, and {{ s_deviceid1 }}"
      - post:
          url: '{{ authDevice }}'
          json:
            username: '{{ s_username }}'
            password: '{{ s_password }}'
            deviceid: '{{ s_deviceid2 }}'
          capture:
            json: '$.authtoken'
            as: 'token'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "will get user meta with token {{ token }}"
      - post:
          url: '{{ getUserMeta }}'
          json:
            username: '{{ s_username }}'
            deviceid: '{{ s_deviceid2 }}'
            authtoken: '{{ token }}'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "got some meta info"
    name: 'getMeta'
    weight: 1
  - flow:
      - log: "will auth device at {{ authDevice }} with {{ s_username }}, {{ s_password}}, and {{ s_deviceid1 }}"
      - post:
          url: '{{ authDevice }}'
          json:
            username: '{{ s_username }}'
            password: '{{ s_password }}'
            deviceid: '{{ s_deviceid1 }}'
          capture:
            json: '$.authtoken'
            as: 'token'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "will get videos with token {{ token }}"
      - post:
          url: '{{ getVideos }}'
          json:
            username: '{{ s_username }}'
            deviceid: '{{ s_deviceid1 }}'
            authtoken: '{{ token }}'
          capture:
            json: '$.random'
            as: 'videoid'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "will get user meta with token {{ token }}"
      - post:
          url: '{{ getUserMeta }}'
          json:
            username: '{{ s_username }}'
            deviceid: '{{ s_deviceid1 }}'
            authtoken: '{{ token }}'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "will update user meta with token {{ token }}"
      - post:
          url: '{{ patchUserMeta }}'
          json:
            username: '{{ s_username }}'
            deviceid: '{{ s_deviceid1 }}'
            authtoken: '{{ token }}'
            videoid: '{{ videoid }}'
            like: '{{ liked }}'
            watchedseconds: '{{$randomNumber(0,7200)}}'
          beforeRequest: 'beforeRequest'
          afterResponse: 'afterResponse'
      - log: "patched user meta"
    name: 'patchMeta'
    weight: 1
